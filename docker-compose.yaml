version: '3.8'
services:

  #postgres:
  # image: postgres:latest
  # container_name: postgres
  #ports:
  # - "5432:5432"
  #volumes:
  # - ./data/postgres:/data/postgres
  #env_file:
  # - docker.env
  #networks:
  # - postgres

  #pgadmin:
  # image: dpage/pgadmin4
  # links:
  #   - postgres:postgres
  # container_name: pgadmin
  # ports:
  #   - "8080:80"
  # volumes:
  #   - ./data/pgadmin:/root/.pgadmin
  # env_file:
  #   - docker.env
  # networks:
  #   - postgres

  #rabbitmq:
  # image: rabbitmq:3-management
  # container_name: rabbitmq
  # hostname: rabbitmq
  # volumes:
  #   - /var/lib/rabbitmq
  # ports:
  #   - "5672:5672"
  #   - "15672:15672"
  # env_file:
  #   - rabbitmq.env

  images-ms:
    build:
      context: .
      dockerfile: ./apps/images-ms/Dockerfile
    command: yarn start:dev images-ms
    env_file:
      - app-build.env
      #depends_on:
      #  - rabbitmq
      #  - postgres
      #networks:
      #  - postgres
      #  - pgadmin
      #  - rabbitmq
      #volumes:
      #   - .:/usr/src/app
      #   - /usr/src/app/node_modules
      #restart: always

      #payments-ms:
      # build:
      #  context: .
      # dockerfile: ./apps/payments-ms/Dockerfile
      #command: yarn start:dev payments-ms
      #env_file:
      # - app-build.env
      #depends_on:
      #  - rabbitmq
      #  - postgres
      #networks:
      #  - postgres
      #  - pgadmin
      #  - rabbitmq
      #  - .:/usr/src/app
      #  - /usr/src/app/node_modules
      #restart: always
      #main:
      # build:
      ## dockerfile: ./apps/main/Dockerfile
      #command: yarn start:dev main
      #env_file:
      # - app-build.env
    #depends_on:
    #  - rabbitmq
    #  - postgres
    #networks:
    #  - postgres
    #  - pgadmin
    #  - rabbitmq
    #volumes:
    #  - .:/usr/src/app
    #   - /usr/src/app/node_modules
    # ports:
    #   - '5003:5003'
    # restart: always

#networks:
#  postgres:
#    driver: bridge
#  pgadmin:
#    driver: bridge
#  rabbitmq:
#    driver: bridge

